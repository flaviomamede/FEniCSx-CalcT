#!/usr/bin/python3
"""
Teste automatizado para ETAPA 5 - Simula√ß√£o Stagewise com Interpola√ß√£o Correta
"""

import subprocess
import sys
import os

def test_etapa5_interpolacao():
    """Testa se a ETAPA 5 executa com interpola√ß√£o correta entre blocos"""
    print("=== TESTE ETAPA 5 - INTERPOLA√á√ÉO CORRETA ===")
    
    # Verificar se arquivos necess√°rios existem
    required_files = [
        "Uploads/barragem2.xdmf",
        "Uploads/barragem2.yaml",
        "Uploads/analise_stagewise_barragem2_xdmf.json",
        "etapa5_stagewise_submesh.py"
    ]
    
    for file_path in required_files:
        if not os.path.exists(file_path):
            print(f"‚úó Arquivo necess√°rio n√£o encontrado: {file_path}")
            return False
        else:
            print(f"‚úì Arquivo encontrado: {file_path}")
    
    try:
        # Executar ETAPA 5
        print("\nExecutando ETAPA 5 com interpola√ß√£o correta...")
        result = subprocess.run([
            "python3", "etapa5_stagewise_submesh.py"
        ], capture_output=True, text=True, timeout=600)
        
        # Mostrar sa√≠da
        print("=== SA√çDA DO PROGRAMA ===")
        print(result.stdout)
        
        if result.stderr:
            print("=== ERROS ===")
            print(result.stderr)
        
        # Verificar c√≥digo de sa√≠da
        if result.returncode == 0:
            print("‚úì ETAPA 5 executou com sucesso")
            
            # Verificar se cont√©m indicadores de sucesso
            if "RESULTADO: SUCESSO" in result.stdout:
                print("‚úì Resultado final: SUCESSO")
            else:
                print("‚úó Resultado final n√£o encontrado")
                return False
            
            # Verificar se interpola√ß√£o foi executada
            if "PASSO 3.1: Interpolando estado do bloco anterior" in result.stdout:
                print("‚úì Interpola√ß√£o entre blocos executada")
            else:
                print("‚úó Interpola√ß√£o entre blocos n√£o detectada")
                return False
            
            # Verificar se aplica√ß√£o de C.I. nos novos elementos foi executada
            if "PASSO 3.2: Aplicando C.I. nos elementos novos" in result.stdout:
                print("‚úì Condi√ß√µes iniciais aplicadas nos novos elementos")
            else:
                print("‚úó Condi√ß√µes iniciais nos novos elementos n√£o detectadas")
                return False
            
            # Verificar se DOFs novos foram identificados
            if "DOFs novos (T):" in result.stdout:
                print("‚úì DOFs novos identificados corretamente")
            else:
                print("‚úó DOFs novos n√£o identificados")
                return False
            
            # Verificar se sistema acoplado funcionou
            if "SIMULA√á√ÉO STAGEWISE COMPLETA COM INTERPOLA√á√ÉO CORRETA" in result.stdout:
                print("‚úì Simula√ß√£o stagewise com interpola√ß√£o completa")
            else:
                print("‚úó Simula√ß√£o stagewise n√£o conclu√≠da")
                return False
            
            # Verificar se n√£o houve segfault
            if "Segmentation fault" not in result.stderr and "segfault" not in result.stderr.lower():
                print("‚úì Nenhum segmentation fault detectado")
            else:
                print("‚úó Segmentation fault detectado")
                return False
            
            # Verificar se todos os 3 blocos foram processados
            blocos_encontrados = result.stdout.count("BLOCO") - result.stdout.count("BLOCO CONSTRUTIVO")
            if blocos_encontrados >= 3:
                print(f"‚úì Todos os blocos processados: {blocos_encontrados}")
            else:
                print(f"‚úó Apenas {blocos_encontrados} blocos processados")
                return False
            
            # Verificar se submeshes foram criadas
            if "Submesh criada:" in result.stdout:
                print("‚úì Submeshes criadas corretamente")
            else:
                print("‚úó Submeshes n√£o criadas")
                return False
            
            # Verificar se elementos cumulativos foram processados
            if "Elementos ativos totais:" in result.stdout:
                print("‚úì Elementos cumulativos processados")
            else:
                print("‚úó Elementos cumulativos n√£o processados")
                return False
            
            return True
        else:
            print(f"‚úó ETAPA 5 falhou com c√≥digo {result.returncode}")
            return False
            
    except subprocess.TimeoutExpired:
        print("‚úó ETAPA 5 excedeu tempo limite")
        return False
    except Exception as e:
        print(f"‚úó Erro ao executar ETAPA 5: {e}")
        return False

if __name__ == "__main__":
    success = test_etapa5_interpolacao()
    if success:
        print("\nüéâ TESTE ETAPA 5: PASSOU - INTERPOLA√á√ÉO CORRETA IMPLEMENTADA!")
        sys.exit(0)
    else:
        print("\n‚ùå TESTE ETAPA 5: FALHOU - PROBLEMAS NA INTERPOLA√á√ÉO")
        sys.exit(1) 